{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sidsh\\\\Videos\\\\Task1_Chatbot\\\\frontend\\\\src\\\\components\\\\QueryBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryBox = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const handleQuery = async () => {\n    try {\n      const res = await axios.get(`http://localhost:8000/query?q=${query}`);\n      setAnswers(res.data.answers);\n    } catch (err) {\n      setAnswers([{\n        content: \"Query failed\",\n        meta: {}\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-4 rounded-lg shadow text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-3\",\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"bg-gray-700 border border-gray-600 text-white px-3 py-2 w-full mb-3 rounded placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Type your question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition\",\n      onClick: handleQuery,\n      children: \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4 list-disc list-inside text-sm space-y-1\",\n      children: answers.map((a, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: a.content\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryBox, \"oymA6ds5vPW2F31JxBqjfnhKdso=\");\n_c = QueryBox;\nexport default QueryBox;\nvar _c;\n$RefreshReg$(_c, \"QueryBox\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QueryBox","_s","query","setQuery","answers","setAnswers","handleQuery","res","get","data","err","content","meta","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","a","idx","_c","$RefreshReg$"],"sources":["C:/Users/sidsh/Videos/Task1_Chatbot/frontend/src/components/QueryBox.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst QueryBox = () => {\n  const [query, setQuery] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n\n  const handleQuery = async () => {\n    try {\n      const res = await axios.get(`http://localhost:8000/query?q=${query}`);\n      setAnswers(res.data.answers);\n    } catch (err) {\n      setAnswers([{ content: \"Query failed\", meta: {} }]);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-4 rounded-lg shadow text-white\">\n      <h2 className=\"text-xl font-semibold mb-3\">Ask a Question</h2>\n      <input\n        className=\"bg-gray-700 border border-gray-600 text-white px-3 py-2 w-full mb-3 rounded placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Type your question...\"\n      />\n      <button\n        className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition\"\n        onClick={handleQuery}\n      >\n        Ask\n      </button>\n      <ul className=\"mt-4 list-disc list-inside text-sm space-y-1\">\n        {answers.map((a, idx) => (\n          <li key={idx}>{a.content}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default QueryBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiCN,KAAK,EAAE,CAAC;MACrEG,UAAU,CAACE,GAAG,CAACE,IAAI,CAACL,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZL,UAAU,CAAC,CAAC;QAAEM,OAAO,EAAE,cAAc;QAAEC,IAAI,EAAE,CAAC;MAAE,CAAC,CAAC,CAAC;IACrD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,8CAA8C;IAAAC,QAAA,gBAC3Df,OAAA;MAAIc,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9DnB,OAAA;MACEc,SAAS,EAAC,sJAAsJ;MAChKM,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAuB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFnB,OAAA;MACEc,SAAS,EAAC,yEAAyE;MACnFW,OAAO,EAAElB,WAAY;MAAAQ,QAAA,EACtB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAIc,SAAS,EAAC,8CAA8C;MAAAC,QAAA,EACzDV,OAAO,CAACqB,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBAClB5B,OAAA;QAAAe,QAAA,EAAeY,CAAC,CAACf;MAAO,GAAfgB,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}